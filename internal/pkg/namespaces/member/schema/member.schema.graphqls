type Member {
    id: ID!
    namespaces: [Namespace!]!
    services: [Service!]!
}

input AddMemberToNamespaceInput {
    namespaceId: ID!
    userId: ID!
}

input AddMemberToServiceInput {
    serviceId: ID!
    userId: ID!
}

extend type Query {
    members(filter: DefaultFilterInput): [Member!]! @auth
    member(membershipId: ID!): Member @auth
}

extend type Mutation {
    addMemberToNamespace(input: AddMemberToNamespaceInput!): Namespace! @auth
    removeMemberFromNamespace(input: AddMemberToNamespaceInput!): Namespace! @auth

    addMemberToService(input: AddMemberToServiceInput!): Service! @auth
    removeMemberFromService(input: AddMemberToServiceInput!): Service! @auth
}