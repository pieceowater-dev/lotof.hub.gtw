type User {
    id: ID!
    username: String!
    email: String!
}

input UserInput {
    username: String!
    email: String!
    password: String!
}

type PaginatedUserList {
    rows: [User!]!
    info: PaginationInfo!
}

extend type Query {
    users(filter: DefaultFilterInput): PaginatedUserList! @auth
    user(id: ID!): User @auth
    me: User @auth
}

extend type Mutation {
    createUser(input: UserInput!): User! @auth #todo: restrict this method for usual users later. they create itself via registration
    updateUser(id: ID!, input: UserInput!): User! @auth
}